{"version":3,"sources":["AppWrapper/Content/Login/Login.module.css","Validation/loginFormSchema.js","AppWrapper/Content/Login/Login.jsx"],"names":["module","exports","loginFormSchema","Yup","shape","login","min","max","required","password","LoginForm","props","initialValues","rememberMe","onSubmit","values","setSubmitting","validateOnBlur","validationSchema","handleChange","handleBlur","errors","touched","className","loginStyle","form","input","onChange","value","name","placeholder","error","onBlur","type","checkbox","checkboxLabel","button","IncorrectEmailOrPassword","connect","state","isAuth","auth","to","wrapper","header"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,OAAS,sBAAsB,OAAS,sBAAsB,MAAQ,qBAAqB,cAAgB,6BAA6B,SAAW,wBAAwB,MAAQ,uB,2ECUvNC,EATSC,MAAaC,MAAM,CACzCC,MAAOF,MACJG,IAAI,EAAG,gMACPC,IAAI,GAAI,uMACRC,SAAS,sGACZC,SAAUN,MACPG,IAAI,EAAG,sMACPE,SAAS,wG,wCCDRE,EAAY,SAACC,GACf,OACI,cAAC,IAAD,CAAQC,cAAe,CAAEP,MAAO,GAAII,SAAU,GAAII,YAAY,GAC1DC,SAAU,SAACC,EAAD,IACNC,EADqC,EAApBA,gBACH,GACdL,EAAMN,MAAMU,EAAOV,MAAOU,EAAON,SAAUM,EAAOF,aAEtDI,gBAAc,EACdC,iBAAkBhB,EANtB,SAQK,gBAAGiB,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAYL,EAA7B,EAA6BA,OAAQM,EAArC,EAAqCA,OAAQC,EAA7C,EAA6CA,QAA7C,OACG,eAAC,IAAD,CAAMC,UAAWC,IAAWC,KAA5B,UACI,gCACI,cAAC,IAAD,CAAOF,UAAWC,IAAWE,MAAOC,SAAUR,EAAcS,MAAOb,EAAOV,MAAOwB,KAAK,QAAQC,YAAa,mCAC9GR,EAAQjB,OAASgB,EAAOhB,OAAS,mBAAGkB,UAAWC,IAAWO,MAAzB,SAAiCV,EAAOhB,WAE1E,gCACI,cAAC,IAAD,CAAOkB,UAAWC,IAAWE,MAAOC,SAAUR,EAAca,OAAQZ,EAAYQ,MAAOb,EAAON,SAAUwB,KAAK,WAAWJ,KAAK,WAAWC,YAAa,yCACxJR,EAAQb,UAAYY,EAAOZ,UAAY,mBAAGc,UAAWC,IAAWO,MAAzB,SAAiCV,EAAOZ,cAEhF,gCACI,cAAC,IAAD,CAAOc,UAAWC,IAAWU,SAAUP,SAAUR,EAAca,OAAQZ,EAAYa,KAAK,WAAWJ,KAAK,eACxG,qBAAKN,UAAWC,IAAWW,cAA3B,gGAEJ,gCACI,wBAAQZ,UAAWC,IAAWY,OAAQH,KAAM,SAA5C,4CACCtB,EAAM0B,yBAA2B,qBAAKd,UAAWC,IAAWO,MAA3B,8KAAyE,eA0BpHO,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBH,yBAA0BE,EAAME,KAAKJ,4BAGD,CAAChC,WAA1BiC,EAjBD,SAAC3B,GACX,OAAIA,EAAM6B,OACC,cAAC,IAAD,CAAUE,GAAI,aAGrB,sBAAKnB,UAAWC,IAAWmB,QAA3B,UACI,oBAAIpB,UAAWC,IAAWoB,OAA1B,gFACA,cAAC,EAAD,CAAWvC,MAAOM,EAAMN,MAAOgC,yBAA0B1B,EAAM0B","file":"static/js/5.dea1bbab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__21gCq\",\"header\":\"Login_header__2zjPC\",\"button\":\"Login_button__2e2kO\",\"input\":\"Login_input__u2PQP\",\"checkboxLabel\":\"Login_checkboxLabel__LJflJ\",\"checkbox\":\"Login_checkbox__35izE\",\"error\":\"Login_error__1lWfp\"};","import * as Yup from \"yup\";\r\n\r\nconst loginFormSchema = Yup.object().shape({\r\n  login: Yup.string()\r\n    .min(2, \"Логин не может быть короче 2 символов!\")\r\n    .max(30, \"Логин не может быть длиньше 30 символов!\")\r\n    .required(\"Обязательное поле!\"),\r\n  password: Yup.string()\r\n    .min(5, \"Пароль не может быть короче 5 символов!\")\r\n    .required(\"Обязательное поле!\")\r\n});\r\nexport default loginFormSchema;","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport loginFormSchema from '../../../Validation/loginFormSchema';\r\nimport loginStyle from './Login.module.css'\r\nimport { connect } from 'react-redux';\r\nimport {login} from './../../../Redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <Formik initialValues={{ login: '', password: '', rememberMe: false }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(false);\r\n                props.login(values.login, values.password, values.rememberMe)\r\n            }}\r\n            validateOnBlur\r\n            validationSchema={loginFormSchema}\r\n            >\r\n            {({ handleChange, handleBlur, values, errors, touched }) => (\r\n                <Form className={loginStyle.form} >\r\n                    <div>\r\n                        <Field className={loginStyle.input} onChange={handleChange} value={values.login} name='login' placeholder={'Логин'} />\r\n                    {touched.login && errors.login && <p className={loginStyle.error}>{errors.login}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <Field className={loginStyle.input} onChange={handleChange} onBlur={handleBlur} value={values.password} type='password' name='password' placeholder={'Пароль'} />\r\n                    {touched.password && errors.password && <p className={loginStyle.error}>{errors.password}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <Field className={loginStyle.checkbox} onChange={handleChange} onBlur={handleBlur} type='checkbox' name='rememberMe' />\r\n                        <div className={loginStyle.checkboxLabel}>запомнить меня</div> \r\n                    </div>\r\n                    <div>\r\n                        <button className={loginStyle.button} type={'submit'} >Войти</button>\r\n                        {props.IncorrectEmailOrPassword ? <div className={loginStyle.error}>Неправильный логин или пароль!</div> : null}\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div className={loginStyle.wrapper}>\r\n            <h1 className={loginStyle.header}>Авторизация</h1>\r\n            <LoginForm login={props.login} IncorrectEmailOrPassword={props.IncorrectEmailOrPassword}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    IncorrectEmailOrPassword: state.auth.IncorrectEmailOrPassword\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login) "],"sourceRoot":""}